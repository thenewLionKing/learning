// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package uk.co.mo.app.mercury.domain.vehicle.entity;

import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;
import uk.co.mo.app.mercury.domain.vehicle.entity.AdaptManufacturerEntity;

privileged aspect AdaptManufacturerEntity_Roo_Entity {
    
    declare @type: AdaptManufacturerEntity: @Entity;
    
    @PersistenceContext
    transient EntityManager AdaptManufacturerEntity.entityManager;
    
    @Transactional
    public void AdaptManufacturerEntity.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void AdaptManufacturerEntity.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            AdaptManufacturerEntity attached = AdaptManufacturerEntity.findAdaptManufacturerEntity(this.adaptManufacturerBean.getManufacturerId());
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void AdaptManufacturerEntity.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void AdaptManufacturerEntity.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public AdaptManufacturerEntity AdaptManufacturerEntity.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        AdaptManufacturerEntity merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager AdaptManufacturerEntity.entityManager() {
        EntityManager em = new AdaptManufacturerEntity().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long AdaptManufacturerEntity.countAdaptManufacturerEntitys() {
        return entityManager().createQuery("SELECT COUNT(o) FROM AdaptManufacturerEntity o", Long.class).getSingleResult();
    }
    
    public static List<AdaptManufacturerEntity> AdaptManufacturerEntity.findAllAdaptManufacturerEntitys() {
        return entityManager().createQuery("SELECT o FROM AdaptManufacturerEntity o", AdaptManufacturerEntity.class).getResultList();
    }
    
    public static AdaptManufacturerEntity AdaptManufacturerEntity.findAdaptManufacturerEntity(Integer id) {
        if (id == null) return null;
        return entityManager().find(AdaptManufacturerEntity.class, id);
    }
    
    public static List<AdaptManufacturerEntity> AdaptManufacturerEntity.findAdaptManufacturerEntityEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM AdaptManufacturerEntity o", AdaptManufacturerEntity.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
