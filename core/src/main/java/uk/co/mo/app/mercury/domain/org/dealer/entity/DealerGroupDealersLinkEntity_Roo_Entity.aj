// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package uk.co.mo.app.mercury.domain.org.dealer.entity;

import java.lang.Integer;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;
import uk.co.mo.app.mercury.domain.org.dealer.entity.DealerGroupDealersLinkEntity;
import uk.co.mo.app.mercury.domain.org.dealer.entity.DealerGroupDealersLinkEntityPK;

privileged aspect DealerGroupDealersLinkEntity_Roo_Entity {
    
    declare @type: DealerGroupDealersLinkEntity: @Entity;
    
    @PersistenceContext
    transient EntityManager DealerGroupDealersLinkEntity.entityManager;
    
    @Transactional
    public void DealerGroupDealersLinkEntity.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void DealerGroupDealersLinkEntity.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            DealerGroupDealersLinkEntity attached = DealerGroupDealersLinkEntity.findDealerGroupDealersLinkEntity(this.getId());
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void DealerGroupDealersLinkEntity.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void DealerGroupDealersLinkEntity.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public DealerGroupDealersLinkEntity DealerGroupDealersLinkEntity.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        DealerGroupDealersLinkEntity merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager DealerGroupDealersLinkEntity.entityManager() {
        EntityManager em = new DealerGroupDealersLinkEntity().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long DealerGroupDealersLinkEntity.countDealerGroupDealersLinkEntitys() {
        return entityManager().createQuery("SELECT COUNT(o) FROM DealerGroupDealersLinkEntity o", Long.class).getSingleResult();
    }
    
    public static List<DealerGroupDealersLinkEntity> DealerGroupDealersLinkEntity.findAllDealerGroupDealersLinkEntitys() {
        return entityManager().createQuery("SELECT o FROM DealerGroupDealersLinkEntity o", DealerGroupDealersLinkEntity.class).getResultList();
    }
    
    public static DealerGroupDealersLinkEntity DealerGroupDealersLinkEntity.findDealerGroupDealersLinkEntity(DealerGroupDealersLinkEntityPK id) {
        if (id == null) return null;
        return entityManager().find(DealerGroupDealersLinkEntity.class, id);
    }
    
    public static List<DealerGroupDealersLinkEntity> DealerGroupDealersLinkEntity.findDealerGroupDealersLinkEntityEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM DealerGroupDealersLinkEntity o", DealerGroupDealersLinkEntity.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
    public static int DealerGroupDealersLinkEntity.deleteDealerGroupDealersLinkEntities(DealerGroupDealersLinkEntityPK pk) {
    	Query q = entityManager().createQuery("delete from DealerGroupDealersLinkEntity o where o.id=:id");
        q.setParameter("id", pk);
//        q.setParameter("groupNum", groupNumber);
        return q.executeUpdate(); 
    }
    
}
